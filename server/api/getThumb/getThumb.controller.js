'use strict';



var config = require('../../config/environment');
var admin = require("firebase-admin");
var gcs = require('@google-cloud/storage')({
  projectId: 'dride-2384f.appspot.com',
  keyFilename: config.firebase.serviceAccount
});

var Thumbler = require('thumbler');


/* 
 * get filename and token and generate a thumbnail for uploaded video
 * This api call generated by cloud function from Firebase
 */

exports.index = function(req, res) {



    var uid = (req.param('uid'))
    var filename = (req.param('filename'))
    var timestamp = filename.split('.')[0]
    var bucketName = 'dride-2384f.appspot.com';



    var filePath = 'clips/' + uid + '/' + filename 

    //download video file
    const bucket = gcs.bucket(bucketName);

    return bucket.file(filePath).download({
        destination: uid + '_' + filename 
    }, function(err) {
        if (err) {
        	res.json({'error': err});
            return err.message
        }


        //TODO: Resize the video width & height

        //take a snapshot
        Thumbler({
            type: 'video',
            input: uid + '_' + filename ,
            output: uid + '_' + timestamp + '.jpg',
            time: '00:00:01',
            //size: '640x480' // this optional if null will use the destination of the video 
        }, function(err, path) {

            if (err) {
                res.json({'error': err});
                return err;
            }


            return bucket.upload(uid + '_' + timestamp + '.jpg', {
		                destination: 'thumbs/' + uid + '/' + timestamp + '.jpg'
		            }).then(() => {
		            	console.log('upload !')
		                var db = admin.database();
		                var ref = db.ref("clips").child(uid).child(timestamp).update({

		                    thumbs: {
		                        'src': 'https://storage.cloud.google.com/dride-2384f.appspot.com/thumbs/' + uid + '/' + timestamp + '.jpg'
		                    },
		                    active: 1

		                })

		                console.log('Thumbnail uploaded to Storage at', path);
		                res.json({'status': 1});
		            }).catch(error => {
                        // Handle errors of asyncFunc1() and asyncFunc2()
                        res.json({'error': error});
                    });


            return path;
        });



    })

   



};
